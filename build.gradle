import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.mvplugins.multiverse-plugin' version '1.2.2'
}

group = 'org.mvplugins.multiverse.core'
description = 'Multiverse-Core'

repositories {
    maven {
        name = 'aikar repo'
        url = uri('https://repo.aikar.co/content/groups/aikar/')
    }

    maven {
        name = 'glaremasters repo'
        url = 'https://repo.glaremasters.me/repository/towny/'
    }

    maven {
        name = "helpchatRepoReleases"
        url = uri("https://repo.helpch.at/releases/")
    }
}

configure(apiDependencies) {
    serverApiVersion = '1.21.8-R0.1-SNAPSHOT'
    mockBukkitServerApiVersion = '1.21'
    mockBukkitVersion = '4.78.0'
}

dependencies {
    // Economy
    externalPlugin('com.github.MilkBowl:VaultAPI:1.7.1') {
        exclude group: 'org.bukkit', module: 'bukkit'
    }

    // PlaceholderAPI
    externalPlugin 'me.clip:placeholderapi:2.11.6'

    // Command Framework
    shadowed 'co.aikar:acf-paper:0.5.1-SNAPSHOT'

    // Config
    shadowed('io.github.townyadvanced.commentedconfiguration:CommentedConfiguration:1.0.1') {
        exclude group: 'org.spigotmc', module: 'spigot-api'
    }

    // Utils
    shadowed 'io.vavr:vavr:0.10.7'
    shadowed 'org.glassfish.hk2:hk2-locator:3.1.1'
    shadowed('org.glassfish.hk2:hk2-inhabitant-generator:3.1.1') {
        exclude group: 'org.apache.maven', module: 'maven-core'
    }
    shadowed('com.dumptruckman.minecraft:Logging:1.1.1') {
        exclude group: 'junit', module: 'junit'
    }
    shadowed 'de.themoep.idconverter:mappings:1.2-SNAPSHOT'
    shadowed('org.bstats:bstats-bukkit:3.1.0') {
        exclude group: 'org.bukkit', module: 'bukkit'
    }
    shadowed 'net.minidev:json-smart:2.5.2'
    shadowed 'org.jetbrains:annotations:26.0.2'
    shadowed 'io.papermc:paperlib:1.0.8'

    // Tests
    testImplementation('com.googlecode.json-simple:json-simple:1.1.1') {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation("org.hamcrest:hamcrest:3.0")
}

ext.bitlyAccessToken = System.getenv('BITLY_ACCESS_TOKEN') ?: 'bitly-access-token'

tasks.register('prepareSource', Sync) {
    inputs.property 'bitlyAccessToken', bitlyAccessToken
    from sourceSets.main.java
    into "$buildDir/src"
    filter(ReplaceTokens, tokens: [
            'bitly-access-token': bitlyAccessToken,
    ])
}

shadowJar {
    relocate 'co.aikar', 'org.mvplugins.multiverse.external.acf'
    relocate 'com.dumptruckman.minecraft.util.Logging', 'org.mvplugins.multiverse.core.utils.CoreLogging'
    relocate 'com.dumptruckman.minecraft.util.DebugLog', 'org.mvplugins.multiverse.core.utils.DebugFileLogger'
    relocate 'de.themoep.idconverter', 'org.mvplugins.multiverse.external.idconverter'
    relocate 'io.github.townyadvanced.commentedconfiguration', 'org.mvplugins.multiverse.external.commentedconfiguration'
    relocate 'org.bstats', 'org.mvplugins.multiverse.external.bstats'
    relocate 'com.sun', 'org.mvplugins.multiverse.external.sun'
    relocate 'net.minidev', 'org.mvplugins.multiverse.external.minidev'
    relocate 'org.objectweb', 'org.mvplugins.multiverse.external.objectweb'
    relocate 'io.vavr', 'org.mvplugins.multiverse.external.vavr'
    relocate 'jakarta', 'org.mvplugins.multiverse.external.jakarta'
    relocate 'javassist', 'org.mvplugins.multiverse.external.javassist'
    relocate 'org.aopalliance', 'org.mvplugins.multiverse.external.aopalliance'
    relocate 'org.glassfish', 'org.mvplugins.multiverse.external.glassfish'
    relocate 'org.jvnet', 'org.mvplugins.multiverse.external.jvnet'
    relocate 'org.intellij', 'org.mvplugins.multiverse.external.intellij'
    relocate 'org.jetbrains', 'org.mvplugins.multiverse.external.jetbrains'
    relocate 'io.papermc.lib', 'org.mvplugins.multiverse.external.paperlib'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/Multiverse/Multiverse-Core"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
